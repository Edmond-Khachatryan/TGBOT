const TelegramBot = require('node-telegram-bot-api');
const config = require('./config');
const express = require('express');
const app = express();

console.log('BOT_TOKEN:', config.botToken);
console.log('WEBHOOK_URL:', process.env.WEBHOOK_URL);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!config.botToken) {
    console.log('–ù–µ—Ç BOT_TOKEN!');
    process.exit(1);
}

// –°–æ–∑–¥–∞–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app.use(express.json());

// –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
const PORT = process.env.PORT || 3000;
const WEBHOOK_URL = process.env.WEBHOOK_URL;

if (!WEBHOOK_URL) {
    console.log('–ù–µ—Ç WEBHOOK_URL!');
    process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
const bot = new TelegramBot(config.botToken);

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook
const webhookUrl = `${WEBHOOK_URL}/bot${config.botToken}`;
bot.deleteWebHook()
    .then(() => {
        return bot.setWebHook(webhookUrl, {
            drop_pending_updates: true,
            allowed_updates: ['message', 'chat_join_request'],
            max_connections: 1
        });
    })
    .then(() => {
        return bot.getWebHookInfo();
    })
    .catch((error) => {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook:', error);
    });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook –∑–∞–ø—Ä–æ—Å–æ–≤
app.post(`/bot${config.botToken}`, (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

// –î–æ–±–∞–≤–ª—è–µ–º health check endpoint
app.get('/health', (req, res) => {
    res.json({ 
        status: 'ok',
        timestamp: new Date().toISOString(),
        environment: process.env.NODE_ENV || 'development',
        webhook_url: WEBHOOK_URL
    });
});

// –ó–∞–ø—É—Å–∫–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä
const server = app.listen(PORT, '0.0.0.0', () => {
    console.log(`Express —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

server.on('error', (error) => {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', error);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏!');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
process.on('SIGTERM', () => {
    console.log('–ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è (SIGTERM)');
    server.close(() => {
        process.exit(0);
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
process.on('uncaughtException', (error) => {
    console.log('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});

process.on('unhandledRejection', (error) => {
    console.log('–ü—Ä–æ–∏–∑–æ—à—ë–ª –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–∫–∞–∑ –≤ –ø—Ä–æ–º–∏—Å–µ:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
bot.on('chat_join_request', async (msg) => {
    const { chat, from } = msg;
    try {
        await bot.approveChatJoinRequest(chat.id, from.id);
        const admins = await bot.getChatAdministrators(chat.id);
        const text = `‚úÖ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ @${from.username || from.first_name} –≤—Å—Ç—É–ø–∏–ª –≤ –∫–∞–Ω–∞–ª "${chat.title}"`;
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        for (const admin of admins) {
            if (!admin.user.is_bot) {
                bot.sendMessage(admin.user.id, text).catch(e => {
                    if (e.response && e.response.body && e.response.body.description &&
                        e.response.body.description.includes("can't initiate conversation")) {
                        console.log(`–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${admin.user.id} ‚Äî –æ–Ω –Ω–µ –Ω–∞—á–∏–Ω–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.`);
                    } else {
                        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É:', e);
                    }
                });
            }
        }
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–µ–±–µ –ª–∏—á–Ω–æ
        if (!admins.some(a => a.user.id === 734296259)) {
            bot.sendMessage(734296259, text).catch(e => {
                if (e.response && e.response.body && e.response.body.description &&
                    e.response.body.description.includes("can't initiate conversation")) {
                    console.log('–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–±–µ ‚Äî —Ç—ã –Ω–µ –Ω–∞—á–∏–Ω–∞–ª –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.');
                } else {
                    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–±–µ:', e);
                }
            });
        }
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
});

process.on('exit', (code) => {
    console.log('–ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à—ë–Ω —Å –∫–æ–¥–æ–º:', code);
});

// === –ù–æ–≤–æ–µ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –º–µ–Ω—é ===

const infoText = 'ü§ñ <b>–ê–≤—Ç–æ–ë–æ—Ç –¥–ª—è Telegram</b>\n\n–≠—Ç–æ—Ç –±–æ—Ç <b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞—è–≤–∫–∏</b> –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É.\n\n‚ú® <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫\n‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º\n‚Ä¢ –†–∞–±–æ—Ç–∞ 24/7 –±–µ–∑ –≤–∞—à–µ–≥–æ —É—á–∞—Å—Ç–∏—è\n\nüí° <i>–•–æ—Ç–∏—Ç–µ –±–æ–ª—å—à–µ —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ Telegram-–±–æ—Ç–∞?</i>\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º!';
const infoTextHy = 'ü§ñ <b>Telegram-’´ ’°’æ’ø’∏’¥’°’ø ’¢’∏’ø</b>\n\n‘±’µ’Ω ’¢’∏’ø’® <b>’°’æ’ø’∏’¥’°’ø ’Ø’•÷Ä’∫’∏’æ ’®’∂’§’∏÷Ç’∂’∏÷Ç’¥ ’ß</b> ’≠’¥’¢’´ ’Ø’°’¥ ’°’¨’´÷Ñ’´ ’¥’´’°’∂’°’¨’∏÷Ç ’∞’°’µ’ø’•÷Ä’®÷â\n\n‚ú® <b>’Ä’∂’°÷Ä’°’æ’∏÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’ù</b>\n‚Ä¢ ’Ä’°’µ’ø’•÷Ä’´ ’°’Ø’∂’©’°÷Ä’©’°’µ’´’∂ ’∞’°’Ω’ø’°’ø’∏÷Ç’¥\n‚Ä¢ ‘æ’°’∂’∏÷Ç÷Å’∏÷Ç’¥’∂’•÷Ä ’°’§’¥’´’∂’∂’•÷Ä’´’∂\n‚Ä¢ ‘±’∑’≠’°’ø’∏÷Ç’¥ ’ß 24/7\n\nüí° <i>’ë’°’∂’Ø’°’∂’∏÷Ç’û’¥ ’•÷Ñ ’°’æ’•’¨’°÷Å’∂’•’¨ ÷Ü’∏÷Ç’∂’Ø÷Å’´’∏’∂’°’¨ ’Ø’°’¥ ’∫’°’ø’æ’´÷Ä’•’¨ ’°’∂’∞’°’ø’°’Ø’°’∂ ’¢’∏’ø÷â</i>\n‘ø’°’∫’æ’•÷Ñ ’Ω’ø’•’≤’Æ’∏’≤’´ ’∞’•’ø÷â';
const infoTextEn = 'ü§ñ <b>AutoBot for Telegram</b>\n\nThis bot <b>automatically approves join requests</b> to your channel or group.\n\n‚ú® <b>Features:</b>\n‚Ä¢ Instant join approval\n‚Ä¢ Admin notifications\n‚Ä¢ 24/7 operation, no manual work needed\n\nüí° <i>Want more features or a custom Telegram bot?</i>\nContact the creator!';

const mainMenu = {
  reply_markup: {
    keyboard: [
      ['‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'üá¶üá≤ ARM', 'üá∫üá∏ US', 'üìù –ó–∞–∫–∞–∑–∞—Ç—å']
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  }
};

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(
    msg.chat.id,
    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.',
    mainMenu
  );
});

bot.on('message', (msg) => {
  const text = msg.text;
  if (text === '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') {
    bot.sendMessage(msg.chat.id, infoText, { parse_mode: 'HTML' });
  } else if (text === 'üá¶üá≤ ARM') {
    bot.sendMessage(msg.chat.id, infoTextHy, { parse_mode: 'HTML' });
  } else if (text === 'üá∫üá∏ US') {
    bot.sendMessage(msg.chat.id, infoTextEn, { parse_mode: 'HTML' });
  } else if (text === 'üìù –ó–∞–∫–∞–∑–∞—Ç—å') {
    // –í—Ä–µ–º–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –±–µ–∑ –æ–ø–ª–∞—Ç—ã
    bot.sendMessage(
      msg.chat.id,
      '–î–ª—è –∑–∞–∫–∞–∑–∞ –∏–ª–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–æ—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º:\nTelegram: @edmondkhach\nEmail: edmond2001@mail.ru'
    );
    // –ö–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è paymentProviderToken, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂–µ:
    /*
    bot.sendInvoice(
      msg.chat.id,
      '–ó–∞–∫–∞–∑ Telegram-–±–æ—Ç–∞',
      '–û–ø–ª–∞—Ç–∞ –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ Telegram-–±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏—ë–º–∞ –∑–∞—è–≤–æ–∫',
      'order_payload_001',
      config.paymentProviderToken,
      'USD',
      [
        {
          label: 'Telegram-–±–æ—Ç',
          amount: 1000 // 10.00 USD (–≤ —Ü–µ–Ω—Ç–∞—Ö)
        }
      ],
      {
        need_name: true,
        need_email: true
      }
    );
    */
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ pre_checkout_query –∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
bot.on('pre_checkout_query', (query) => {
  bot.answerPreCheckoutQuery(query.id, true);
});

bot.on('successful_payment', (msg) => {
  bot.sendMessage(
    msg.chat.id,
    '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞.'
  );
});